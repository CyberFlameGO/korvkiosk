From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Alexander=20S=C3=B6derberg?=
 <contact@alexander-soderberg.com>
Date: Thu, 7 Jan 2021 05:40:44 +0100
Subject: [PATCH] Add injectors


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 980be89f0fd274d6f51986e1edc8152c05f8aa9a..30d2ba63688b0e201012dbbde432a0f9570e9a91 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -8,6 +8,9 @@ import com.google.common.collect.ImmutableSet;
 import com.google.common.collect.Iterators;
 import com.google.common.collect.Lists;
 import com.google.common.collect.MapMaker;
+import com.google.inject.AbstractModule;
+import com.google.inject.Guice;
+import com.google.inject.Injector;
 import com.mojang.authlib.GameProfile;
 import com.mojang.brigadier.StringReader;
 import com.mojang.brigadier.exceptions.CommandSyntaxException;
@@ -269,6 +272,7 @@ public final class CraftServer implements Server {
     private final List<CraftPlayer> playerView;
     public int reloadCount;
     public static Exception excessiveVelEx; // Paper - Velocity warnings
+    private Injector injector; // korvkiosk - Add injector
 
     static {
         ConfigurationSerialization.registerClass(CraftOfflinePlayer.class);
@@ -288,6 +292,10 @@ public final class CraftServer implements Server {
 
         Bukkit.setServer(this);
 
+        // korvkiosk start - Setup injector
+        this.injector = Guice.createInjector(new ServerModule());
+        // korvkiosk end
+
         // Register all the Enchantments and PotionTypes now so we can stop new registration immediately after
         Enchantments.DAMAGE_ALL.getClass();
         org.bukkit.enchantments.Enchantment.stopAcceptingRegistrations();
@@ -2458,4 +2466,18 @@ public final class CraftServer implements Server {
         return getServer().lagging;
     }
     // Purpur end
+
+    // korvkiosk start
+    @Override
+    public Injector getInjector() {
+        return this.injector;
+    }
+    private final class ServerModule extends AbstractModule {
+        @Override
+        protected void configure() {
+            bind(Server.class).toInstance(CraftServer.this);
+            bind(org.bukkit.scheduler.BukkitScheduler.class).toProvider(CraftServer.this::getScheduler);
+        }
+    }
+    // korvkiosk end
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/scheduler/MinecraftInternalPlugin.java b/src/main/java/org/bukkit/craftbukkit/scheduler/MinecraftInternalPlugin.java
index 49dc0c441b9dd7e7745cf15ced67f383ebee1f99..256bc99cf94fc16af2a904d59add72d055a239be 100644
--- a/src/main/java/org/bukkit/craftbukkit/scheduler/MinecraftInternalPlugin.java
+++ b/src/main/java/org/bukkit/craftbukkit/scheduler/MinecraftInternalPlugin.java
@@ -1,6 +1,7 @@
 package org.bukkit.craftbukkit.scheduler;
 
 
+import com.google.inject.Injector;
 import org.bukkit.Server;
 import org.bukkit.command.Command;
 import org.bukkit.command.CommandSender;
@@ -129,4 +130,12 @@ public class MinecraftInternalPlugin extends PluginBase {
     public List<String> onTabComplete(CommandSender sender, Command command, String alias, String[] args) {
         throw new UnsupportedOperationException("Not supported.");
     }
+
+    // korvkiosk start
+    @Override
+    public Injector getInjector() {
+        return org.bukkit.Bukkit.getInjector();
+    }
+    // korvkiosk end
+
 }
